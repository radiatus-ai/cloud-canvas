/**
 * Canvas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CanvasApi);
  }
})(this, function (expect, CanvasApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new CanvasApi.User();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') object[setter](value);
    else object[property] = value;
  };

  describe('User', function () {
    it('should create an instance of User', function () {
      // uncomment below and update the code to test User
      //var instance = new CanvasApi.User();
      //expect(instance).to.be.a(CanvasApi.User);
    });

    it('should have the property email (base name: "email")', function () {
      // uncomment below and update the code to test the property email
      //var instance = new CanvasApi.User();
      //expect(instance).to.be();
    });

    it('should have the property googleId (base name: "google_id")', function () {
      // uncomment below and update the code to test the property googleId
      //var instance = new CanvasApi.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function () {
      // uncomment below and update the code to test the property id
      //var instance = new CanvasApi.User();
      //expect(instance).to.be();
    });

    it('should have the property organizationId (base name: "organization_id")', function () {
      // uncomment below and update the code to test the property organizationId
      //var instance = new CanvasApi.User();
      //expect(instance).to.be();
    });
  });
});
