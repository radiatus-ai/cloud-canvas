/**
 * Canvas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 0.1.0
 */
class User {
  /**
   * Constructs a new <code>User</code>.
   * @alias module:model/User
   * @param email {String}
   * @param googleId {String}
   * @param id {String}
   */
  constructor(email, googleId, id) {
    User.initialize(this, email, googleId, id);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, email, googleId, id) {
    obj['email'] = email;
    obj['google_id'] = googleId;
    obj['id'] = id;
  }

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new User();

      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('google_id')) {
        obj['google_id'] = ApiClient.convertToType(data['google_id'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('organization_id')) {
        obj['organization_id'] = ApiClient.convertToType(
          data['organization_id'],
          'String'
        );
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>User</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>User</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of User.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error(
          'The required field `' +
            property +
            '` is not found in the JSON data: ' +
            JSON.stringify(data)
        );
      }
    }
    // ensure the json data is a string
    if (
      data['email'] &&
      !(typeof data['email'] === 'string' || data['email'] instanceof String)
    ) {
      throw new Error(
        'Expected the field `email` to be a primitive type in the JSON string but got ' +
          data['email']
      );
    }
    // ensure the json data is a string
    if (
      data['google_id'] &&
      !(
        typeof data['google_id'] === 'string' ||
        data['google_id'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `google_id` to be a primitive type in the JSON string but got ' +
          data['google_id']
      );
    }
    // ensure the json data is a string
    if (
      data['id'] &&
      !(typeof data['id'] === 'string' || data['id'] instanceof String)
    ) {
      throw new Error(
        'Expected the field `id` to be a primitive type in the JSON string but got ' +
          data['id']
      );
    }
    // ensure the json data is a string
    if (
      data['organization_id'] &&
      !(
        typeof data['organization_id'] === 'string' ||
        data['organization_id'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `organization_id` to be a primitive type in the JSON string but got ' +
          data['organization_id']
      );
    }

    return true;
  }
}

User.RequiredProperties = ['email', 'google_id', 'id'];

/**
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * @member {String} google_id
 */
User.prototype['google_id'] = undefined;

/**
 * @member {String} id
 */
User.prototype['id'] = undefined;

/**
 * @member {String} organization_id
 */
User.prototype['organization_id'] = undefined;

export default User;
