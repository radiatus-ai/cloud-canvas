openapi: 3.1.0
info:
  title: Canvas API
  version: 0.1.0
paths:
  /projects/{project_id}/connections/:
    get:
      summary: List Connections
      operationId: list_connections_projects__project_id__connections__get
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Project Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Connection"
                title: Response List Connections Projects  Project Id  Connections  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      summary: Create Connection
      operationId: create_connection_projects__project_id__connections__post
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectionCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}/connections/{connection_id}:
    delete:
      summary: Delete Connection
      operationId: delete_connection_projects__project_id__connections__connection_id__delete
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Project Id
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Connection Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /credentials/:
    get:
      summary: List Credentials
      operationId: list_credentials_credentials__get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Credential"
                title: Response List Credentials Credentials  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      summary: Create Credential
      operationId: create_credential_credentials__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /credentials/{credential_id}:
    get:
      summary: Get Credential
      operationId: get_credential_credentials__credential_id__get
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Credential Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    patch:
      summary: Update Credential
      operationId: update_credential_credentials__credential_id__patch
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Credential Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    delete:
      summary: Delete Credential
      operationId: delete_credential_credentials__credential_id__delete
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Credential Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /packages:
    get:
      summary: List All Packages
      operationId: list_all_packages_packages_get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Package"
                title: Response List All Packages Packages Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      summary: Create Global Package
      operationId: create_global_package_packages_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}/packages/:
    get:
      tags:
        - project
        - packages
      summary: List Project Packages
      operationId: list_project_packages_projects__project_id__packages__get
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            minimum: 1
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectPackage"
                title: Response List Project Packages Projects  Project Id  Packages  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      tags:
        - project
        - packages
      summary: Create Project Package
      operationId: create_project_package_projects__project_id__packages__post
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectPackageCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}/packages/{package_id}:
    get:
      tags:
        - project
        - packages
      summary: Get Project Package
      operationId: get_project_package_projects__project_id__packages__package_id__get
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    patch:
      tags:
        - project
        - packages
      summary: Update Project Package
      operationId: update_project_package_projects__project_id__packages__package_id__patch
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/app__schemas__project_package__ProjectPackageUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - project
        - packages
      summary: Delete Project Package
      operationId: delete_project_package_projects__project_id__packages__package_id__delete
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}/packages/{package_id}/deploy:
    post:
      tags:
        - project
        - packages
      summary: Deploy Project Package
      operationId: deploy_project_package_projects__project_id__packages__package_id__deploy_post
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}/packages/{package_id}/destroy:
    delete:
      tags:
        - project
        - packages
      summary: Destroy Project Package
      operationId: destroy_project_package_projects__project_id__packages__package_id__destroy_delete
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPackage"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/:
    get:
      summary: List Projects
      operationId: list_projects_projects__get
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
                title: Response List Projects Projects  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      summary: Create Project
      operationId: create_project_projects__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /projects/{project_id}:
    patch:
      summary: Update Project
      operationId: update_project_projects__project_id__patch
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    delete:
      summary: Delete Project
      operationId: delete_project_projects__project_id__delete
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid4
            title: Project Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
  /provisioner/projects/{project_id}/packages/{package_id}:
    patch:
      tags:
        - provisioner
        - project
        - packages
      summary: Update Project Package
      operationId: update_project_package_provisioner_projects__project_id__packages__package_id__patch
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the project
            title: Project Id
          description: The ID of the project
        - name: package_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: The ID of the package
            title: Package Id
          description: The ID of the package
        - name: x-canvas-token
          in: header
          required: true
          schema:
            type: string
            title: X-Canvas-Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/app__schemas__provisioner_project_package__ProjectPackageUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Connection:
      properties:
        source_package_id:
          type: string
          format: uuid4
          title: Source Package Id
        target_package_id:
          type: string
          format: uuid4
          title: Target Package Id
        source_handle:
          type: string
          title: Source Handle
        target_handle:
          type: string
          title: Target Handle
        id:
          type: string
          format: uuid4
          title: Id
        project_id:
          type: string
          format: uuid4
          title: Project Id
      type: object
      required:
        - source_package_id
        - target_package_id
        - source_handle
        - target_handle
        - id
        - project_id
      title: Connection
    ConnectionCreate:
      properties:
        source_package_id:
          type: string
          format: uuid4
          title: Source Package Id
        target_package_id:
          type: string
          format: uuid4
          title: Target Package Id
        source_handle:
          type: string
          title: Source Handle
        target_handle:
          type: string
          title: Target Handle
        project_id:
          type: string
          format: uuid4
          title: Project Id
      type: object
      required:
        - source_package_id
        - target_package_id
        - source_handle
        - target_handle
        - project_id
      title: ConnectionCreate
    Credential:
      properties:
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid4
          title: Id
        organization_id:
          type: string
          format: uuid4
          title: Organization Id
      type: object
      required:
        - credential_type
        - name
        - id
        - organization_id
      title: Credential
    CredentialCreate:
      properties:
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        name:
          type: string
          title: Name
        credential_value:
          type: string
          title: Credential Value
      type: object
      required:
        - credential_type
        - name
        - credential_value
      title: CredentialCreate
    CredentialType:
      type: string
      enum:
        - SERVICE_ACCOUNT_KEY
        - SECRET
      title: CredentialType
    CredentialUpdate:
      properties:
        credential_value:
          anyOf:
            - type: string
            - type: "null"
          title: Credential Value
      type: object
      title: CredentialUpdate
    DeployStatus:
      type: string
      enum:
        - NOT_DEPLOYED
        - DEPLOYING
        - DESTROYING
        - DEPLOYED
        - FAILED
      title: DeployStatus
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Package:
      properties:
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        inputs:
          type: object
          title: Inputs
        outputs:
          type: object
          title: Outputs
        parameters:
          type: object
          title: Parameters
        private:
          anyOf:
            - type: boolean
            - type: "null"
          title: Private
          default: true
        id:
          type: string
          format: uuid4
          title: Id
      type: object
      required:
        - name
        - type
        - inputs
        - outputs
        - parameters
        - id
      title: Package
    PackageCreate:
      properties:
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        inputs:
          type: object
          title: Inputs
        outputs:
          type: object
          title: Outputs
        parameters:
          type: object
          title: Parameters
        private:
          anyOf:
            - type: boolean
            - type: "null"
          title: Private
          default: true
      type: object
      required:
        - name
        - type
        - inputs
        - outputs
        - parameters
      title: PackageCreate
    Project:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          format: uuid4
          title: Id
        organization_id:
          type: string
          format: uuid4
          title: Organization Id
        credentials:
          items:
            $ref: "#/components/schemas/Credential"
          type: array
          title: Credentials
          default: []
      type: object
      required:
        - name
        - id
        - organization_id
      title: Project
    ProjectCreate:
      properties:
        name:
          type: string
          title: Name
        organization_id:
          anyOf:
            - type: string
              format: uuid4
            - type: "null"
          title: Organization Id
        credential_ids:
          anyOf:
            - items:
                type: string
                format: uuid4
              type: array
            - type: "null"
          title: Credential Ids
      type: object
      required:
        - name
      title: ProjectCreate
    ProjectPackage:
      properties:
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        inputs:
          type: object
          title: Inputs
        outputs:
          type: object
          title: Outputs
        parameters:
          type: object
          title: Parameters
        id:
          type: string
          format: uuid4
          title: Id
        project_id:
          type: string
          format: uuid4
          title: Project Id
        deploy_status:
          $ref: "#/components/schemas/DeployStatus"
        output_data:
          anyOf:
            - type: object
            - type: "null"
          title: Output Data
        parameter_data:
          anyOf:
            - type: object
            - type: "null"
          title: Parameter Data
      type: object
      required:
        - name
        - type
        - inputs
        - outputs
        - parameters
        - id
        - project_id
        - deploy_status
      title: ProjectPackage
    ProjectPackageCreate:
      properties:
        name:
          type: string
          title: Name
        type:
          type: string
          title: Type
        inputs:
          type: object
          title: Inputs
        outputs:
          type: object
          title: Outputs
        parameters:
          type: object
          title: Parameters
        deploy_status:
          anyOf:
            - $ref: "#/components/schemas/DeployStatus"
            - type: "null"
          default: NOT_DEPLOYED
      type: object
      required:
        - name
        - type
        - inputs
        - outputs
        - parameters
      title: ProjectPackageCreate
    ProjectUpdate:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        credential_ids:
          anyOf:
            - items:
                type: string
                format: uuid4
              type: array
            - type: "null"
          title: Credential Ids
      type: object
      title: ProjectUpdate
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    app__schemas__project_package__ProjectPackageUpdate:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        type:
          anyOf:
            - type: string
            - type: "null"
          title: Type
        inputs:
          anyOf:
            - type: object
            - type: "null"
          title: Inputs
        outputs:
          anyOf:
            - type: object
            - type: "null"
          title: Outputs
        parameters:
          anyOf:
            - type: object
            - type: "null"
          title: Parameters
        deploy_status:
          anyOf:
            - $ref: "#/components/schemas/DeployStatus"
            - type: "null"
          default: NOT_DEPLOYED
        output_data:
          anyOf:
            - type: object
            - type: "null"
          title: Output Data
        parameter_data:
          anyOf:
            - type: object
            - type: "null"
          title: Parameter Data
      type: object
      title: ProjectPackageUpdate
    app__schemas__provisioner_project_package__ProjectPackageUpdate:
      properties:
        deploy_status:
          $ref: "#/components/schemas/DeployStatus"
        output_data:
          anyOf:
            - type: object
            - type: "null"
          title: Output Data
      type: object
      required:
        - deploy_status
      title: ProjectPackageUpdate
